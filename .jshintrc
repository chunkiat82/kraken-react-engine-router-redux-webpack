{
  /*
   * ENVIRONMENTS
   * =================
   */

  // Define globals exposed by modern browsers.
  "browser": true,

  // Define globals exposed by jQuery.
  "jquery": true,

  // Define globals exposed by Node.js.
  "node": true,

  /*
   * ENFORCING OPTIONS
   * =================
   */

  // Force all variable names to use either camelCase style or UPPER_CASE
  // with underscores.
  "camelcase": false,

  // Prohibit use of == and != in favor of === and !==.
  "eqeqeq": true,

  // Enforce tab width of 2 spaces.
  "indent": 4,

  // Prohibit use of a variable before it is defined.
  "latedef": true,

  // Enforce line length to 80 characters
  "maxlen": 120,

  // Require capitalized names for constructor functions.
  "newcap": true,

  // Enforce use of single quotation marks for strings.
  "quotmark": "single",

  // Enforce placing 'use strict' at the top function scope
  "strict": true,

  // Prohibit use of explicitly undeclared variables.
  "undef": true,

  // Warn when variables are defined but never used.
  "unused": true,

  // Maximum error before stopping
  "maxerr": 50,

  // true = Prohibit bitwise operators (&, |, ^, etc.)
  "bitwise": true,

  // true = Require {} for every new block or scope
  "curly": true,

  // true = Require filtering for..in loops with obj.hasOwnProperty()
  "forin": false,

  // true = Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
  "immed": false,

  // true = Prohibit use of `arguments.caller` and `arguments.callee`
  "noarg": true,

  // true = Prohibit use of empty blocks
  "noempty": true,

  // true = Prohibit use of `++` & `--`
  "plusplus": false,

  // true = Require all non-global variables to be declared (prevents global leaks)
  "undef": true,

  // Max number of formal params allowed per function
  "maxparams": 10,

  // Max depth of nested blocks (within functions)
  "maxdepth": 3,

  // Max number statements per function
  "maxstatements": 25,

  // Max cyclomatic complexity per function
  "maxcomplexity": 6,


  /*
   * RELAXING OPTIONS
   * =================
   */

  // Suppress warnings about == null comparisons.
  "eqnull": false,

  // true = Tolerate Automatic Semicolon Insertion (no semicolons)
  "asi": false,

  // true = Tolerate assignments where comparisons would be expected
  "boss": false,

  // true = Allow debugger statements e.g. browser breakpoints.
  "debug": false,

  // true = Allow ES.next (ES6) syntax (ex: `const`)
  "esnext": true,

  // true = Allow Mozilla specific syntax (extends and overrides esnext features)
  "moz": false,

  // true = Tolerate use of `eval` and `new Function()`
  "evil": false,

  // true = Tolerate `ExpressionStatement` as Programs
  "expr": false,

  // true = Tolerate defining variables inside control statements"
  "funcscope": false,
  // true = Allow global "use strict" (also enables 'strict')
  "globalstrict": false,
  // true = Tolerate using the `__iterator__` property
  "iterator": false,
  // true = Tolerate omitting a semicolon for the last statement of a 1-line block
  "lastsemic": false,
  // true = Tolerate possibly unsafe line breakings
  "laxbreak": false,
  // true = Tolerate comma-first style coding
  "laxcomma": false,
  // true = Tolerate functions being defined in loops
  "loopfunc": false,
  // true = Tolerate multi-line strings
  "multistr": false,
  // true = Tolerate using the `__proto__` property
  "proto": false,
  // true = Tolerate script-targeted URLs
  "scripturl": false,
  // true = Allows re-define variables later in code e.g. `var x=1; x=2;`
  "shadow": false,
  // true = Tolerate using `[]` notation when it can still be expressed in dot notation
  "sub": false,
  // true = Tolerate `new function () { ... };` and `new Object;`
  "supernew": false,
  // true = Tolerate using this in a non-constructor function
  "validthis": false,

  // Custom Globals
  "globals"       : {        // additional predefined global variables
    // mocha
    "before"      : true,
    "beforeEach"  : true,
    "after"       : true,
    "afterEach"   : true,
    "describe"    : true,
    "it"          : true,
    // RequireJS / CommonJS
    "define"      : true,
    "requirejs"   : true,
    "require"     : true,
    // Nemo
    "nemo"        : true,
    // Browser globals
    "URL"         : true,
    // React
    "document"    : true
  }
}
